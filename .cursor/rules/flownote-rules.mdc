---
description: 
globs: 
alwaysApply: false
---
# Cursor Rules voor FlowNote

## 1. Algemene richtlijnen
âœ… Stick to the MVP â€“ Focus alleen op de kernfuncties: spraak-naar-tekst (Deepgram), AI-contentgeneratie (OpenAI) en gebruikersauthenticatie (Firebase). Vermijd feature creep.
âœ… Scheiding van verantwoordelijkheden (SoC) â€“ Houd frontend en database modulair en onafhankelijk.
âœ… Don't Repeat Yourself (DRY) â€“ Gebruik herbruikbare componenten, hooks en services om redundantie te minimaliseren.
âœ… Behoud een 'mobile first' benadering.
âœ… Volg de documentatie â€“ De docs moeten architectonische beslissingen begeleiden. Update ze bij het maken van significante wijzigingen.

## 2. Projectstructuur & Sleutelbestanden
ðŸ“Œ Frontend: Next.js + TypeScript
ðŸ“Œ Database: Firebase (Firestore)
ðŸ“Œ Authenticatie: Firebase Auth
ðŸ“Œ API Routes: Next.js API Routes
ðŸ“Œ AI-integratie: Deepgram (spraak-naar-tekst) & OpenAI (AI-generatie)

### Frontend (Next.js)
âœ… Componenten in /frontend-web/components/ moeten herbruikbaar en zelfstandig zijn.
âœ… State management via React Context API â€“ Vermijd overmatige prop-drilling.
âœ… Gebruik custom hooks voor gedeelde logica (API calls, data fetching).
âœ… Gebruik Tailwind CSS voor styling â€“ Vermijd inline styles en !important.
âœ… Beheer Firebase authenticatie alleen in de Auth Context â€“ Behandel geen auth logica in componenten.

### API Routes (Next.js)
âœ… Houd API routes in /frontend-web/app/api/ georganiseerd op basis van functionaliteit.
âœ… Houd AI-integratie services gescheiden in aparte routes of services directory.
âœ… Gebruik middleware.ts voor authenticatie en validatie van verzoeken.
âœ… Gebruik environment variables (.env.local) voor gevoelige data â€“ Nooit API-sleutels hardcoden.

### Database (Firebase/Firestore)
âœ… Gebruik de juiste Firestore regels in firestore.rules voor toegangscontrole.
âœ… Organiseer databasestructuur logisch volgens de functionaliteit.

## 3. Code Stijl & Best Practices
âœ… Gebruik ESLint en Prettier voor consistente opmaak (geconfigureerd in .eslintrc.json).
âœ… Gebruik duidelijke en beschrijvende namen voor bestanden en functies â€“ Vermijd namen als tmpFunc().
âœ… Wrap asynchrone functies in try/catch om crashes te voorkomen.
âœ… Optimaliseer React componenten met useMemo en useCallback om onnodige re-renders te voorkomen.

## 4. Prestaties & Optimalisatie
âœ… Gebruik lazy loading voor componenten waar mogelijk.
âœ… Benut cachingmechanismen (bijv. AI-gegenereerde content opslaan in Firestore).
âœ… Minimaliseer API-aanroepen â€“ Haal alleen data op wanneer nodig.
âœ… Optimaliseer afbeeldingen en assets voor snelle laadtijden.

## 5. Deployment
âœ… Frontend wordt gedeployed via Vercel.
âœ… API Routes worden ook via Vercel gedeployed als onderdeel van de Next.js applicatie.
âœ… Firebase-configuratie moet voor productie worden ingesteld via environment variables.